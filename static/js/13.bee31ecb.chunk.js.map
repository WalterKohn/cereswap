{"version":3,"sources":["components/HashRoute.tsx","views/Nft/market/Collection/OnSale.tsx","views/Nft/market/Collection/index.tsx","components/AddressInputSelect/index.tsx","views/Nft/market/components/MarketPageHeader.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","views/Nft/market/components/StatBox.tsx","views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","views/Nft/market/Collection/config.ts","views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx"],"names":["HashRoute","Component","component","hash","routeProps","location","props","React","memo","OnSale","collectionAddress","useParams","useState","nfts","setNfts","orderDirection","orderBy","queryParams","setQueryParams","isFetching","setIsFetching","skip","setSkip","t","useTranslation","collection","useGetCollection","numberTokensListed","sortByItems","label","value","useEffect","fetchApiData","marketData","a","apiRequestPromises","map","marketNft","getNftApi","tokenId","Promise","all","apiResponses","responsesWithMarketData","apiNft","i","collectionName","name","prevState","combinedNfts","uniqBy","fetchMarketData","getNftsMarketData","toLowerCase","isTradable","REQUEST_SIZE","subgraphRes","Header","Page","position","alignItems","justifyContent","mb","minWidth","fontSize","textTransform","color","fontWeight","Select","options","onOptionChange","event","length","gridGap","gridTemplateColumns","nft","currentAskPriceAsNumber","parseFloat","currentAskPrice","undefined","GridPlaceholder","mt","Number","onClick","scale","endIcon","spin","Items","lazy","Traits","IndividualNFTPageRouter","Collection","path","useRouteMatch","isPBCollection","pancakeBunniesAddress","useFetchCollection","exact","PageLoader","ResultStatus","SubMenu","styled","div","theme","colors","input","inputSecondary","radii","default","isOpen","AddressLink","Text","initialState","resultFound","NOT_VALID","defaultValidAddressHandler","resolve","AddressInputSelect","onValidAddress","onAddressClick","state","setState","isAddress","hasResults","FOUND","NOT_FOUND","validAddressHandler","placeholder","subject","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","px","MarketPageHeader","background","useTheme","isDark","AvatarImage","attrs","alt","src","borderColor","StatBoxItem","title","stat","textAlign","height","width","mx","StatBox","Flex","invertedContrast","cardBorder","card","SearchBar","history","useHistory","push","nftsBaseUrl","MarketPageTitle","description","children","as","BaseSubMenu","SubMenuItems","BackLink","RouterLink","primary","TopBar","to","LowestPriceStatBoxItem","lowestPrice","setLowestPrice","getLowestPriceInCollection","lowestCollectionPrice","fetchLowestPrice","formattedLowestPrice","toLocaleString","minimumFractionDigits","maximumFractionDigits","symbol","totalSupply","totalVolumeBNB","banner","avatar","useLocation","pathname","DEFAULT_TABS","volume","onSaleEntry","href","itemsConfig","BannerHeader","bannerImage","large","formatNumber","address","Container","items","activeItem","StyledBannerImage","mediaQueries","sm","md","bannerAlt","flexDirection","pb","BannerImage","bottom","left"],"mappings":"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","file":"static/js/13.bee31ecb.chunk.js","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router'\n\nconst HashRoute = ({ component: Component, hash, ...routeProps }) => (\n  <Route {...routeProps} component={({ location, ...props }) => location.hash === hash && <Component {...props} />} />\n)\n\nexport default React.memo(HashRoute)\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport { Box, Flex, Grid, Text, Button, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { uniqBy } from 'lodash'\nimport { NftToken, TokenMarketData } from 'state/nftMarket/types'\nimport { useGetCollection } from 'state/nftMarket/hooks'\nimport { getNftApi, getNftsMarketData } from 'state/nftMarket/helpers'\nimport Page from 'components/Layout/Page'\nimport { useTranslation } from 'contexts/Localization'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport Header from './Header'\nimport GridPlaceholder from '../components/GridPlaceholder'\nimport { CollectibleLinkCard } from '../components/CollectibleCard'\nimport { REQUEST_SIZE } from './config'\n\ninterface QueryParams {\n  orderDirection: 'asc' | 'desc'\n  orderBy: 'currentAskPrice' | 'updatedAt'\n}\n\nconst OnSale = () => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const [nfts, setNfts] = useState<NftToken[]>([])\n  const [queryParams, setQueryParams] = useState<QueryParams>({ orderDirection: 'asc', orderBy: 'currentAskPrice' })\n  const [isFetching, setIsFetching] = useState(false)\n  const [skip, setSkip] = useState(0)\n  const { t } = useTranslation()\n  const collection = useGetCollection(collectionAddress)\n  const { numberTokensListed } = collection\n\n  const sortByItems = [\n    { label: t('Lowest price'), value: { orderDirection: 'asc', orderBy: 'currentAskPrice' } },\n    { label: t('Highest price'), value: { orderDirection: 'desc', orderBy: 'currentAskPrice' } },\n    { label: t('Recently listed'), value: { orderDirection: 'desc', orderBy: 'updatedAt' } },\n  ]\n\n  useEffect(() => {\n    const fetchApiData = async (marketData: TokenMarketData[]) => {\n      const apiRequestPromises = marketData.map((marketNft) => getNftApi(collectionAddress, marketNft.tokenId))\n      const apiResponses = await Promise.all(apiRequestPromises)\n      const responsesWithMarketData = apiResponses.map((apiNft, i) => {\n        return {\n          ...apiNft,\n          collectionAddress,\n          collectionName: apiNft.collection.name,\n          marketData: marketData[i],\n        }\n      })\n      setIsFetching(false)\n      setNfts((prevState) => {\n        const combinedNfts = [...prevState, ...responsesWithMarketData]\n        return uniqBy(combinedNfts, 'tokenId')\n      })\n    }\n\n    const fetchMarketData = async () => {\n      const subgraphRes = await getNftsMarketData(\n        { collection: collectionAddress.toLowerCase(), isTradable: true },\n        REQUEST_SIZE,\n        queryParams.orderBy,\n        queryParams.orderDirection,\n        skip,\n      )\n      fetchApiData(subgraphRes)\n    }\n\n    setIsFetching(true)\n    fetchMarketData()\n  }, [collectionAddress, queryParams, skip])\n\n  const handleChange = (event: OptionProps) => {\n    setNfts([])\n    const { value } = event\n    setQueryParams({ orderDirection: value.orderDirection, orderBy: value.orderBy })\n  }\n\n  const handleLoadMore = () => {\n    setSkip(skip + REQUEST_SIZE)\n  }\n\n  return (\n    <>\n      <Header collection={collection} />\n      <Page>\n        <Box position=\"relative\">\n          <Flex alignItems=\"center\" justifyContent={['flex-start', null, null, 'flex-end']} mb=\"24px\">\n            <Box minWidth=\"165px\">\n              <Text fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight={600} mb=\"4px\">\n                {t('Sort By')}\n              </Text>\n              <Select options={sortByItems} onOptionChange={handleChange} />\n            </Box>\n          </Flex>\n          {!nfts.length ? (\n            <GridPlaceholder />\n          ) : (\n            <>\n              <Grid\n                gridGap=\"16px\"\n                gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\n                alignItems=\"start\"\n              >\n                {nfts.map((nft) => {\n                  const currentAskPriceAsNumber = nft.marketData && parseFloat(nft.marketData.currentAskPrice)\n\n                  return (\n                    <CollectibleLinkCard\n                      key={`${nft.tokenId}-${nft.collectionName}`}\n                      nft={nft}\n                      currentAskPrice={currentAskPriceAsNumber > 0 ? currentAskPriceAsNumber : undefined}\n                    />\n                  )\n                })}\n              </Grid>\n            </>\n          )}\n\n          <Flex mt=\"60px\" mb=\"12px\" justifyContent=\"center\">\n            {Number(numberTokensListed) > nfts?.length && (\n              <Button\n                onClick={handleLoadMore}\n                scale=\"sm\"\n                endIcon={isFetching ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n              >\n                {isFetching ? t('Loading') : t('Load more')}\n              </Button>\n            )}\n          </Flex>\n        </Box>\n      </Page>\n    </>\n  )\n}\n\nexport default OnSale\n","import HashRoute from 'components/HashRoute'\nimport PageLoader from 'components/Loader/PageLoader'\nimport React, { lazy } from 'react'\nimport { Route, useParams, useRouteMatch } from 'react-router'\nimport { useFetchCollection, useGetCollection } from 'state/nftMarket/hooks'\nimport { pancakeBunniesAddress } from '../constants'\nimport OnSale from './OnSale'\n\nconst Items = lazy(() => import('./Items'))\nconst Traits = lazy(() => import('./Traits'))\nconst IndividualNFTPageRouter = lazy(() => import('./IndividualNFTPage'))\n\nconst Collection = () => {\n  const { path } = useRouteMatch()\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const collection = useGetCollection(collectionAddress)\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n\n  useFetchCollection(collectionAddress)\n\n  if (!collection) {\n    return <PageLoader />\n  }\n\n  return (\n    <>\n      <HashRoute exact path={path} hash=\"\" component={isPBCollection ? Items : OnSale} />\n      <HashRoute exact path={path} hash=\"#items\" component={Items} />\n      <HashRoute exact path={path} hash=\"#onsale\" component={OnSale} />\n      <HashRoute exact path={path} hash=\"#traits\" component={Traits} />\n      <Route path={`${path}/:tokenId`}>\n        <IndividualNFTPageRouter />\n      </Route>\n    </>\n  )\n}\n\nexport default Collection\n","import React, { ChangeEvent, useState, useEffect } from 'react'\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport CircleLoader from 'components/Loader/CircleLoader'\n\nenum ResultStatus {\n  NOT_VALID,\n  FOUND,\n  NOT_FOUND,\n}\n\ninterface AddressInputSelectProps extends BoxProps {\n  onValidAddress?: (value: string) => Promise<boolean>\n  onAddressClick: (value: string) => void\n}\n\nconst SubMenu = styled.div<{ isOpen: boolean }>`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\n  left: 0;\n  padding-bottom: 8px;\n  padding-top: 16px;\n  position: absolute;\n  top: calc(100% - 12px);\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  width: 100%;\n  z-index: 15;\n\n  ${({ isOpen }) =>\n    isOpen &&\n    `\n    height: auto;\n    opacity: 1;\n    transform: scaleY(1);\n  `}\n`\n\nconst AddressLink = styled(Text)`\n  cursor: pointer;\n  overflow-wrap: break-word;\n  font-weight: bold;\n  padding-left: 16px;\n  padding-right: 16px;\n`\n\nconst initialState = {\n  isFetching: false,\n  resultFound: ResultStatus.NOT_VALID,\n  value: '',\n}\n\nconst defaultValidAddressHandler = () => Promise.resolve(true)\n\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\n  onValidAddress = defaultValidAddressHandler,\n  onAddressClick,\n  ...props\n}) => {\n  const [state, setState] = useState(initialState)\n  const { t } = useTranslation()\n  const { isFetching, resultFound, value } = state\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value: newValue } = evt.target\n    setState((prevState) => ({\n      ...prevState,\n      value: newValue,\n    }))\n  }\n\n  const handleClick = () => {\n    setState(initialState)\n    onAddressClick(state.value)\n  }\n\n  // When we have a valid address fetch the data\n  useEffect(() => {\n    const isValidAddress = isAddress(value) !== false\n\n    const validAddressHandler = async () => {\n      try {\n        setState((prevState) => ({ ...prevState, isFetching: true }))\n        const hasResults = await onValidAddress(value)\n\n        setState((prevState) => ({\n          ...prevState,\n          isFetching: false,\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\n        }))\n      } catch {\n        setState((prevState) => ({ ...prevState, isFetching: false }))\n      }\n    }\n\n    if (isValidAddress) {\n      validAddressHandler()\n    } else {\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\n    }\n  }, [value, onValidAddress, setState])\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Input\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\n        value={state.value}\n        onChange={handleChange}\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\n      />\n      {isFetching && (\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\n          <CircleLoader />\n        </Box>\n      )}\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\n        {resultFound === ResultStatus.FOUND ? (\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\n        ) : (\n          <Text px=\"16px\" fontWeight=\"bold\">\n            {t('No results found.')}\n          </Text>\n        )}\n      </SubMenu>\n    </Box>\n  )\n}\n\nexport default AddressInputSelect\n","import React from 'react'\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\nimport useTheme from 'hooks/useTheme'\n\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\n  const { theme } = useTheme()\n  const background = theme.isDark\n    ? 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)'\n    : 'linear-gradient(111.68deg, #f2ecf2 0%, #e8f2f6 100%)'\n  return <PageHeader background={background} {...props} />\n}\n\nexport default MarketPageHeader\n","import styled from 'styled-components'\n\ninterface AvatarImageProps {\n  src: string\n  borderColor?: string\n  alt?: string\n}\n\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\n  alt,\n}))<AvatarImageProps>`\n  background: url('${({ src }) => src}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 96px;\n  height: 96px;\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n\nexport default AvatarImage\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\n\nexport interface StatBoxItemProps extends BoxProps {\n  title: string\n  stat: string\n}\n\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\n  <Box {...props}>\n    <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\n      {title}\n    </Text>\n    {stat === null ? (\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\n    ) : (\n      <Text fontWeight=\"600\" textAlign=\"center\">\n        {stat}\n      </Text>\n    )}\n  </Box>\n)\n\nconst StatBox = styled(Flex)`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.card};\n  justify-content: space-around;\n  padding: 8px;\n  width: 100%;\n`\n\nexport default StatBox\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport AddressInputSelect from 'components/AddressInputSelect'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nconst SearchBar: React.FC = (props) => {\n  const history = useHistory()\n\n  const handleAddressClick = (value: string) => {\n    history.push(`${nftsBaseUrl}/profile/${value}`)\n  }\n\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\n}\n\nexport default SearchBar\n","import React, { ReactNode } from 'react'\nimport { Box, Grid, GridProps, Heading } from '@pancakeswap/uikit'\n\ninterface MarketPageTitleProps extends GridProps {\n  title: string\n  description?: ReactNode\n}\n\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\n    <Box>\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\n        {title}\n      </Heading>\n      {description}\n    </Box>\n    <Box>{children}</Box>\n  </Grid>\n)\n\nexport default MarketPageTitle\n","import { SubMenuItems } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseSubMenu = styled(SubMenuItems)`\n  background-color: transparent;\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\nexport default BaseSubMenu\n","export const REQUEST_SIZE = 100\n","import React from 'react'\nimport { Box, ChevronLeftIcon, Flex } from '@pancakeswap/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport SearchBar from '../components/SearchBar'\n\nconst BackLink = styled(RouterLink)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst TopBar: React.FC = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n      <BackLink to={nftsBaseUrl}>\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\n        {t('All Collections')}\n      </BackLink>\n      <Box>\n        <SearchBar />\n      </Box>\n    </Flex>\n  )\n}\n\nexport default TopBar\n","import React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\n\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\n  collectionAddress: string\n}\n\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\n      setLowestPrice(lowestCollectionPrice)\n    }\n\n    fetchLowestPrice()\n  }, [collectionAddress, setLowestPrice])\n\n  const formattedLowestPrice =\n    lowestPrice === null\n      ? null\n      : lowestPrice.toLocaleString(undefined, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })\n\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\n}\n\nexport default LowestPriceStatBoxItem\n","import React from 'react'\nimport { useLocation, useParams } from 'react-router'\nimport { Text } from '@pancakeswap/uikit'\nimport { Collection } from 'state/nftMarket/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport MarketPageTitle from '../components/MarketPageTitle'\nimport StatBox, { StatBoxItem } from '../components/StatBox'\nimport BannerHeader from '../components/BannerHeader'\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\nimport BaseSubMenu from '../components/BaseSubMenu'\nimport { nftsBaseUrl, pancakeBunniesAddress } from '../constants'\nimport TopBar from './TopBar'\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\n\ninterface HeaderProps {\n  collection: Collection\n}\n\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\n  const { t } = useTranslation()\n  const { pathname, hash } = useLocation()\n\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n  const DEFAULT_TABS = isPBCollection ? '#items' : '#onsale'\n\n  const volume = totalVolumeBNB\n    ? parseFloat(totalVolumeBNB).toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })\n    : '0'\n\n  const onSaleEntry = {\n    label: t('On sale'),\n    href: `${nftsBaseUrl}/collections/${collectionAddress}#onsale`,\n  }\n\n  const itemsConfig = [\n    {\n      label: t('Items'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\n    },\n    {\n      label: t('Traits'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\n    },\n  ]\n\n  return (\n    <>\n      <MarketPageHeader>\n        <TopBar />\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\n        <MarketPageTitle\n          title={collection.name}\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\n        >\n          <StatBox>\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\n            <StatBoxItem\n              title={t('Items listed')}\n              stat={numberTokensListed ? formatNumber(Number(numberTokensListed), 0, 0) : '0'}\n            />\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\n          </StatBox>\n        </MarketPageTitle>\n      </MarketPageHeader>\n      <Container>\n        <BaseSubMenu\n          items={isPBCollection ? itemsConfig : [onSaleEntry, ...itemsConfig]}\n          activeItem={`${pathname}${hash || DEFAULT_TABS}`}\n          mt=\"24px\"\n          mb=\"8px\"\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\n\ninterface StyledBannerImageProps {\n  src: string\n  alt?: string\n}\n\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\n  alt,\n}))<StyledBannerImageProps>`\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\n  background-image: url('${({ src }) => src}');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 100%;\n  border-radius: 32px;\n  height: 123px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 192px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 256px;\n  }\n`\n\nexport default StyledBannerImage\n","import React, { ReactNode } from 'react'\nimport { Flex, Box, FlexProps } from '@pancakeswap/uikit'\nimport BannerImage from './BannerImage'\n\ninterface BannerHeaderProps extends FlexProps {\n  bannerImage: string\n  bannerAlt?: string\n  avatar?: ReactNode\n}\n\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\n  return (\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\n      <Box position=\"relative\" pb=\"56px\">\n        <BannerImage src={bannerImage} alt={bannerAlt} />\n        <Box position=\"absolute\" bottom={0} left={-4}>\n          <Flex alignItems=\"flex-end\">\n            {avatar}\n            {children}\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default BannerHeader\n"],"sourceRoot":""}